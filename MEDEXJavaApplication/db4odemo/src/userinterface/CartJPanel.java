/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface;

import Business.Cart.Cart;
import Business.CustomerAccount.CustomerAccount;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import userinterface.OrderPlacement.AddressJPanel;

/**
 *
 * @author vaniv
 */
public class CartJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CartJPanel
     */
    private JPanel container;
    private EcoSystem system;
    private CustomerAccount account;
    private Organization organization;
    private Enterprise enterprise;

    public CartJPanel(JPanel container, EcoSystem system, CustomerAccount account, Organization organization,Enterprise enterprise) {
        initComponents();
       this.container =container;
       this.enterprise = enterprise;
       this.system =system;
       this.account =account;
       this.organization =organization;
       refreshTable();
       DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
         headerRenderer.setBackground(new Color(85,79,102));

         for (int i = 0; i < cartTable.getModel().getColumnCount(); i++) {
        cartTable.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
        }
    }

    
    public void refreshTable(){
        int rowCount = cartTable.getRowCount();
        DefaultTableModel model = (DefaultTableModel)cartTable.getModel();
        for(int i = rowCount - 1; i >=0; i--) {
            model.removeRow(i);
        }
                        for(Cart cart :account.getCartDirectory().getCartList()){
                             Object row[] = new Object[5];
                             row[0]=cart;
                             row[1]=cart.getName();
                             row[2]=cart.getProductType();
                             row[3]=cart.getQuantity();
                             row[4]=(cart.getQuantity() * cart.getPrice());
                             model.addRow(row);
                        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        cartTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(44, 44, 91));
        setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        cartTable.setBackground(new java.awt.Color(44, 44, 91));
        cartTable.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cartTable.setForeground(new java.awt.Color(171, 238, 255));
        cartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ITEMID", "NAME", "PRODUCT", "QUANTITY", "PRICE"
            }
        ));
        cartTable.setRowHeight(150);
        cartTable.setSelectionBackground(new java.awt.Color(85, 79, 102));
        cartTable.setSelectionForeground(new java.awt.Color(171, 238, 255));
        jScrollPane1.setViewportView(cartTable);

        jButton1.setBackground(new java.awt.Color(44, 44, 91));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(171, 238, 255));
        jButton1.setText("DELETE ITEM");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(44, 44, 91));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(171, 238, 255));
        jButton2.setText("PLACE ORDER");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(549, 549, 549)
                        .addComponent(jButton1)
                        .addGap(458, 458, 458)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(505, 505, 505)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 855, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(512, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 593, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int RowCount = cartTable.getRowCount();
        if (RowCount != 0){
        container.removeAll();
        AddressJPanel cart = new AddressJPanel(container,system,account,organization,enterprise);
        container.add("Cart",cart);
        CardLayout crdLyt = (CardLayout) container.getLayout();
        crdLyt.next(container);
        }else{
            JOptionPane.showMessageDialog(null,"Cart is Empty , Please add products to proceed");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selectedRow = cartTable.getSelectedRow();
        Cart cart= null;
        if(selectedRow>=0){
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Are you sure to delete??","Warning",selectionButton);
            if(selectionResult == JOptionPane.YES_OPTION){
                for(Cart c : account.getCartDirectory().getCartList()){
                    cart =c;
                } 
            }
        account.getCartDirectory().removeCart(cart);
        refreshTable();
        }else{
            JOptionPane.showMessageDialog(null,"Please select the item to be removed");
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable cartTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    
}
