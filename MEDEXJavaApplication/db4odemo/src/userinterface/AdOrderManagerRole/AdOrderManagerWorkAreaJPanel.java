/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdOrderManagerRole;

import Buisness.Products.Product;
import Business.CustomerAccount.CustomerAccount;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Order.Order;
import Business.Organization.CustomerProcurementOrganization;
import Business.Organization.Organization;
import static Business.Organization.Organization.Type.SupplierSales;
import Business.Organization.SupplierSalesOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.OrderWorkRequest;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.SuppliesManagerRole.AddDrugJPanel;

/**
 *
 * @author Harshitha
 */
public class AdOrderManagerWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AdManagerWorkAreaJPanel
     */
    private UserAccount account;
    private Enterprise enterprise;
    private Organization organization;
    private JPanel userProcessContainer;
    private EcoSystem buisness;
    public AdOrderManagerWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise,EcoSystem buisness) {
        initComponents();
        this.account=account;
        this.enterprise=enterprise;
        this.organization=organization;
        this.userProcessContainer=userProcessContainer;
        this.buisness=buisness;
        populateTable();
                
    }
    
    public void populateTable()
    {
//        DefaultTableModel dtm = (DefaultTableModel)tblDirectory.getModel();
//        dtm.setRowCount(0);
//        for(Network network:buisness.getNetworkList()){
//            for(Enterprise e:network.getEnterpriseDirectory().getEnterpriseList()){
//                for(Enterprise.EnterpriseType type :Enterprise.EnterpriseType.values()){
//                    if(type.getValue().equals(Enterprise.EnterpriseType.PortalAdmin.getValue())){
//        for(Organization o :e.getOrganizationDirectory().getOrganizationList()){
//          for(Organization.Type type1 :Organization.Type.values()){
//                            if(type1.getValue().equals(Organization.Type.CustomerService.getValue())){
//        for(CustomerAccount ca : o.getCustomerAccountDirectory().getUserAccountList()){
//            for(Order order:ca.getOrderDirectory().getOrderList()){
//            
//
//            Object[] row = new Object[dtm.getColumnCount()];
//            row[0]=order;
//            row[1]=order.getProductList().toString();
//            dtm.addRow(row);
//        }
//    }
//    }
//          }
//        }
//                    }
//                }
//            }
//        }
    }
//    /**
//     * This method is called from within the constructor to initialize the form.
//     * WARNING: Do NOT modify this code. The content of this method is always
//     * regenerated by the Form Editor.
//     */
//    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 955, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 604, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // String message = messageJTextField.getText();
        
       OrderWorkRequest request = new OrderWorkRequest();
      //  request.setMessage(message);
        request.setSender(account);
        request.setStatus("Sent");
     Organization org = null;
        for(Network network:buisness.getNetworkList()){
            for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseList()){
                for(Organization organization1:enterprise.getOrganizationDirectory().getOrganizationList()){
                    //for (Organization.Type type : Organization.Type.values()){
      // for(Organization organization1 : buisness.getAod().getAllOrganizations()){
       // for (Organization organization1 : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization1 instanceof SupplierSalesOrganization){
                System.out.println("yes sup organizar");
                org = organization1;
                break;
            }
        }
            }
        }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(request);
            account.getWorkQueue().getWorkRequestList().add(request);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
          ProcessOrderJPanel viewPanel= new ProcessOrderJPanel(userProcessContainer,account,organization,enterprise);
            userProcessContainer.add("ViewPanel",viewPanel);
            CardLayout layout=(CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void messageJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_messageJTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
